{"version":3,"sources":["./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.module.ts"],"names":[],"mappings":"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","file":"settings.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../core';\nimport { SettingsComponent } from './settings.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/settings/settings-routing.module.ts","module.exports = \"<div class=\\\"settings-page\\\">\\n  <div class=\\\"container page\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 offset-md-3 col-xs-12\\\">\\n\\n        <h1 class=\\\"text-xs-center\\\">Your Settings</h1>\\n\\n        <app-list-errors [errors]=\\\"errors\\\"></app-list-errors>\\n\\n        <form [formGroup]=\\\"settingsForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n          <fieldset [disabled]=\\\"isSubmitting\\\">\\n\\n            <fieldset class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"URL of profile picture\\\"\\n                formControlName=\\\"image\\\" />\\n            </fieldset>\\n\\n            <fieldset class=\\\"form-group\\\">\\n              <input class=\\\"form-control form-control-lg\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Username\\\"\\n                formControlName=\\\"username\\\" />\\n            </fieldset>\\n\\n            <fieldset class=\\\"form-group\\\">\\n              <textarea class=\\\"form-control form-control-lg\\\"\\n                rows=\\\"8\\\"\\n                placeholder=\\\"Short bio about you\\\"\\n                formControlName=\\\"bio\\\">\\n              </textarea>\\n            </fieldset>\\n\\n            <fieldset class=\\\"form-group\\\">\\n              <input class=\\\"form-control form-control-lg\\\"\\n                type=\\\"email\\\"\\n                placeholder=\\\"Email\\\"\\n                formControlName=\\\"email\\\" />\\n            </fieldset>\\n\\n            <fieldset class=\\\"form-group\\\">\\n              <input class=\\\"form-control form-control-lg\\\"\\n                type=\\\"password\\\"\\n                placeholder=\\\"New Password\\\"\\n                formControlName=\\\"password\\\" />\\n            </fieldset>\\n\\n            <button class=\\\"btn btn-lg btn-primary pull-xs-right\\\"\\n              type=\\\"submit\\\">\\n              Update Settings\\n            </button>\\n\\n          </fieldset>\\n        </form>\\n\\n        <!-- Line break for logout button -->\\n        <hr />\\n\\n        <button class=\\\"btn btn-outline-danger\\\"\\n          (click)=\\\"logout()\\\">\\n          Or click here to logout.\\n        </button>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/settings/settings.component.html\n// module id = ./src/app/settings/settings.component.html\n// module chunks = settings.module","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User, UserService } from '../core';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  user: User = {} as User;\n  settingsForm: FormGroup;\n  errors: Object = {};\n  isSubmitting = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private fb: FormBuilder\n  ) {\n    // create form group using the form builder\n    this.settingsForm = this.fb.group({\n      image: '',\n      username: '',\n      bio: '',\n      email: '',\n      password: ''\n    });\n    // Optional: subscribe to changes on the form\n    // this.settingsForm.valueChanges.subscribe(values => this.updateUser(values));\n  }\n\n  ngOnInit() {\n    // Make a fresh copy of the current user's object to place in editable form fields\n    Object.assign(this.user, this.userService.getCurrentUser());\n    // Fill the form\n    this.settingsForm.patchValue(this.user);\n  }\n\n  logout() {\n    this.userService.purgeAuth();\n    this.router.navigateByUrl('/');\n  }\n\n  submitForm() {\n    this.isSubmitting = true;\n\n    // update the model\n    this.updateUser(this.settingsForm.value);\n\n    this.userService\n    .update(this.user)\n    .subscribe(\n      updatedUser => this.router.navigateByUrl('/profile/' + updatedUser.username),\n      err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    );\n  }\n\n  updateUser(values: Object) {\n    Object.assign(this.user, values);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/settings/settings.component.ts","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { SettingsComponent } from './settings.component';\nimport { AuthGuard } from '../core';\nimport { SharedModule } from '../shared';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    SettingsRoutingModule\n  ],\n  declarations: [\n    SettingsComponent\n  ]\n})\nexport class SettingsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/settings/settings.module.ts"],"sourceRoot":"webpack:///"}